diff -ur mingw-w64-4.0.5.orig/debian/changelog mingw-w64-4.0.5/debian/changelog
--- mingw-w64-4.0.5.orig/debian/changelog	2016-02-27 14:25:01.000000000 +0100
+++ mingw-w64-4.0.5/debian/changelog	2016-02-28 02:51:33.643232234 +0100
@@ -1,3 +1,9 @@
+mingw-w64 (4.0.5-1.1~sherpya) UNRELEASED; urgency=medium
+
+  * Rebuild with -march=i486
+
+ -- Gianluigi Tiesi <sherpya@netfarm.it>  Sun, 28 Feb 2016 02:50:39 +0100
+
 mingw-w64 (4.0.5-1) unstable; urgency=medium
 
   * New upstream release.
diff -ur mingw-w64-4.0.5.orig/debian/control mingw-w64-4.0.5/debian/control
--- mingw-w64-4.0.5.orig/debian/control	2016-02-27 14:24:18.000000000 +0100
+++ mingw-w64-4.0.5/debian/control	2016-02-28 02:50:17.279564204 +0100
@@ -38,23 +38,6 @@
  The wine package can be used to test software built using MinGW-w64
  without using Windows.
 
-Package: mingw-w64-x86-64-dev
-Architecture: all
-Depends: ${misc:Depends}, mingw-w64-common
-Breaks: gcc-mingw-w64 (<< 4.6.0), mingw-w64-dev (<< 2.0.3-1), mingw-w64-dev (= 3.0~svn4933-1), libpthreads-mingw-w64
-Replaces: mingw-w64-dev (<< 2.0.3-1), mingw-w64-dev (= 3.0~svn4933-1), libpthreads-mingw-w64
-Suggests: wine64
-Description: Development files for MinGW-w64 targeting Win64
- MinGW-w64 provides a development and runtime environment for 32- and
- 64-bit (x86 and x64) Windows applications using the Windows API and
- the GNU Compiler Collection (gcc).
- .
- This package contains the headers and libraries required to build
- 64-bit software using MinGW-w64.
- .
- The wine64 package can be used to test software built using MinGW-w64
- without using Windows.
-
 Package: mingw-w64
 Architecture: all
 Depends: gcc-mingw-w64, g++-mingw-w64, ${misc:Depends}
diff -ur mingw-w64-4.0.5.orig/debian/rules mingw-w64-4.0.5/debian/rules
--- mingw-w64-4.0.5.orig/debian/rules	2016-01-02 17:04:36.000000000 +0100
+++ mingw-w64-4.0.5/debian/rules	2016-02-28 02:50:17.279564204 +0100
@@ -16,7 +16,7 @@
 # Target architectures
 target32 := i686-w64-mingw32
 target64 := x86_64-w64-mingw32
-targets := $(target32) $(target64)
+targets := $(target32)
 
 # Host architecture
 host := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
@@ -95,7 +95,7 @@
 $(target32crt)-configure-stamp: $(target32)~$(target32)~headers-install-stamp autoreconf-stamp
 	mkdir -p $(call buildfolder,$(target32crt)) && \
 	cd $(call buildfolder,$(target32crt)) && \
-	$(call sourcefolder,$(target32crt))/configure --prefix=/usr/$(call ruletarget,$(target32crt)) --host=$(call rulehost,$(target32crt)) --target=$(call ruletarget,$(target32crt)) --enable-lib32 --disable-lib64 CPPFLAGS="$(CPPFLAGS) -I$(top_dir)/debian/tmp/usr/$(call ruletarget,$(target32crt))/include"
+	$(call sourcefolder,$(target32crt))/configure --prefix=/usr/$(call ruletarget,$(target32crt)) --host=$(call rulehost,$(target32crt)) --target=$(call ruletarget,$(target32crt)) --enable-lib32 --disable-lib64 CPPFLAGS="-mtune=generic -march=i486 $(CPPFLAGS) -I$(top_dir)/debian/tmp/usr/$(call ruletarget,$(target32crt))/include"
 	touch $@
 target64crt := $(target64)~$(target64)~crt
 $(target64crt)-configure-stamp: $(target64)~$(target64)~headers-install-stamp autoreconf-stamp
@@ -134,7 +134,7 @@
 	if [ "$(call rulehost,$*)" = "$(host)" ]; then \
 		$(call sourcefolder,$*)/configure --prefix=/usr $(shell dpkg-buildflags --export=configure) --host=$(call rulehost,$*) --target=$(call ruletarget,$*); \
 	else \
-		$(call sourcefolder,$*)/configure --prefix=/usr/$(call ruletarget,$*) --host=$(call rulehost,$*) --target=$(call ruletarget,$*) CPPFLAGS="$(CPPFLAGS) -I$(top_dir)/debian/tmp/usr/$(call ruletarget,$*)/include" LDFLAGS="$(LDFLAGS) -L$(top_dir)/debian/tmp/usr/$(call ruletarget,$*)/lib"; \
+		$(call sourcefolder,$*)/configure --prefix=/usr/$(call ruletarget,$*) --host=$(call rulehost,$*) --target=$(call ruletarget,$*) CPPFLAGS="-mtune=generic -march=i486 $(CPPFLAGS) -I$(top_dir)/debian/tmp/usr/$(call ruletarget,$*)/include" LDFLAGS="$(LDFLAGS) -L$(top_dir)/debian/tmp/usr/$(call ruletarget,$*)/lib"; \
 	fi
 	touch $*-configure-stamp
 
