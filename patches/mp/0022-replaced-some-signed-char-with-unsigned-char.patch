From 3161df63d9948f5368049c6f8f7e6047aa16e59b Mon Sep 17 00:00:00 2001
From: sherpya <sherpya@netfarm.it>
Date: Sat, 27 Apr 2013 05:04:13 +0200
Subject: [PATCH 22/28] replaced some signed char with unsigned char

this fixes some subtitle/charset related problems
---
 libmpdemux/mf.c  |  2 +-
 libvo/vo_fbdev.c |  4 ++--
 parser-cfg.c     |  8 ++++----
 stream/stream.c  |  4 ++--
 stream/stream.h  |  2 +-
 stream/tv.c      |  2 +-
 sub/subreader.c  | 16 ++++++++--------
 sub/vobsub.c     | 18 +++++++++---------
 8 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/libmpdemux/mf.c b/libmpdemux/mf.c
index ecf43b8..34e40d4 100644
--- a/libmpdemux/mf.c
+++ b/libmpdemux/mf.c
@@ -70,7 +70,7 @@ mf_t* open_mf(char * filename){
      while ( fgets( fname,PATH_MAX,lst_f ) )
       {
        /* remove spaces from end of fname */
-       char *t=fname + strlen( fname ) - 1;
+       unsigned char *t=fname + strlen( fname ) - 1;
        while ( t > fname && isspace( *t ) ) *(t--)=0;
        if ( stat( fname,&fs ) )
         {
diff --git a/libvo/vo_fbdev.c b/libvo/vo_fbdev.c
index 9c2fbb4..228fae4 100644
--- a/libvo/vo_fbdev.c
+++ b/libvo/vo_fbdev.c
@@ -105,8 +105,8 @@ static int validate_mode(fb_mode_t *m)
 
 static FILE *fp;
 static int line_num = 0;
-static char *line;
-static char *token[MAX_NR_TOKEN];
+static unsigned char *line;
+static unsigned char *token[MAX_NR_TOKEN];
 
 static int get_token(int num)
 {
diff --git a/parser-cfg.c b/parser-cfg.c
index 5c9d18a..92a3ed5 100644
--- a/parser-cfg.c
+++ b/parser-cfg.c
@@ -60,10 +60,10 @@ int m_config_parse_config_file(m_config_t* config, const char *conffile, int sil
 #define MAX_OPT_LEN	1000
 #define MAX_PARAM_LEN	1500
 	FILE *fp = NULL;
-	char *line = NULL;
-	char opt[MAX_OPT_LEN + 1];
-	char param[MAX_PARAM_LEN + 1];
-	char c;		/* for the "" and '' check */
+	unsigned char *line = NULL;
+	unsigned char opt[MAX_OPT_LEN + 1];
+	unsigned char param[MAX_PARAM_LEN + 1];
+	unsigned char c;		/* for the "" and '' check */
 	int tmp;
 	int line_num = 0;
 	int line_pos;	/* line pos */
diff --git a/stream/stream.c b/stream/stream.c
index 9e19095..4a81dcf 100644
--- a/stream/stream.c
+++ b/stream/stream.c
@@ -711,8 +711,8 @@ uint8_t *stream_read_until(stream_t *s, uint8_t *mem, int max,
   return mem;
 }
 
-int parse_chapter_range(const m_option_t *conf, const char *range) {
-  const char *s;
+int parse_chapter_range(const m_option_t *conf, const unsigned char *range) {
+  const unsigned char *s;
   char *t;
   if (!range)
     return M_OPT_MISSING_PARAM;
diff --git a/stream/stream.h b/stream/stream.h
index 9fa39d4..f5e43ee 100644
--- a/stream/stream.h
+++ b/stream/stream.h
@@ -402,6 +402,6 @@ typedef struct {
 
 int bluray_id_from_lang(stream_t *s, enum stream_ctrl_type type, const char *lang);
 
-int parse_chapter_range(const m_option_t *conf, const char *range);
+int parse_chapter_range(const m_option_t *conf, const unsigned char *range);
 
 #endif /* MPLAYER_STREAM_H */
diff --git a/stream/tv.c b/stream/tv.c
index 0f65358..8ee6bec 100644
--- a/stream/tv.c
+++ b/stream/tv.c
@@ -577,7 +577,7 @@ static int open_tv(tvi_handle_t *tvh)
 	int channel = 0;
 	if (tvh->tv_param->channel)
 	 {
-	   if (isdigit(*tvh->tv_param->channel))
+	   if (isdigit((unsigned char) *tvh->tv_param->channel))
 		/* if tvh->tv_param->channel begins with a digit interpret it as a number */
 		channel = atoi(tvh->tv_param->channel);
 	   else
diff --git a/sub/subreader.c b/sub/subreader.c
index ecc5ff5..2a11931 100644
--- a/sub/subreader.c
+++ b/sub/subreader.c
@@ -89,12 +89,12 @@ int sub_format=SUB_INVALID;
 unsigned long previous_sub_end;
 #endif
 
-static int eol(char p) {
+static int eol(unsigned char p) {
 	return p=='\r' || p=='\n' || p=='\0';
 }
 
 /* Remove leading and trailing space */
-static void trail_space(char *s) {
+static void trail_space(unsigned char *s) {
 	int i = 0;
 	while (isspace(s[i])) ++i;
 	if (i) strcpy(s, s + i);
@@ -779,8 +779,8 @@ static void sub_pp_ssa(subtitle *sub) {
  * by set, based on code by szabi (dunnowhat sub format ;-)
  */
 static subtitle *sub_read_line_pjs(stream_t *st,subtitle *current, int utf16) {
-    char line[LINE_LEN+1];
-    char text[LINE_LEN+1], *s, *d;
+    unsigned char line[LINE_LEN+1];
+    unsigned char text[LINE_LEN+1], *s, *d;
 
     if (!stream_read_line (st, line, LINE_LEN, utf16))
 	return NULL;
@@ -820,7 +820,7 @@ static subtitle *sub_read_line_mpsub(stream_t *st, subtitle *current, int utf16)
 	char line[LINE_LEN+1];
 	float a,b;
 	int num=0;
-	char *p, *q;
+	unsigned char *p, *q;
 
 	do
 	{
@@ -958,7 +958,7 @@ retry:
 
 static subtitle *sub_read_line_jacosub(stream_t* st, subtitle * current, int utf16)
 {
-    char line1[LINE_LEN], line2[LINE_LEN], directive[LINE_LEN], *p, *q;
+    unsigned char line1[LINE_LEN], line2[LINE_LEN], directive[LINE_LEN], *p, *q;
     unsigned a1, a2, a3, a4, b1, b2, b3, b4, comment = 0;
     static unsigned jacoTimeres = 30;
     static int jacoShift = 0;
@@ -1874,7 +1874,7 @@ char * strreplace( char * in,char * what,char * whereof )
 #endif
 
 
-static void strcpy_trim(char *d, const char *s)
+static void strcpy_trim(unsigned char *d, const unsigned char *s)
 {
     // skip leading whitespace
     while (*s && isspace(*s)) {
@@ -1929,7 +1929,7 @@ static void strcpy_get_ext(char *d, const char *s)
    }
 }
 
-static int whiteonly(const char *s)
+static int whiteonly(const unsigned char *s)
 {
     while (*s) {
 	if (!isspace(*s)) return 0;
diff --git a/sub/vobsub.c b/sub/vobsub.c
index f03dfc0..e13a6be 100644
--- a/sub/vobsub.c
+++ b/sub/vobsub.c
@@ -235,7 +235,7 @@ typedef FILE rar_stream_t;
 
 /**********************************************************************/
 
-static ssize_t vobsub_getline(char **lineptr, size_t *n, rar_stream_t *stream)
+static ssize_t vobsub_getline(unsigned char **lineptr, size_t *n, rar_stream_t *stream)
 {
     size_t res = 0;
     int c;
@@ -244,7 +244,7 @@ static ssize_t vobsub_getline(char **lineptr, size_t *n, rar_stream_t *stream)
         if (*lineptr)
             *n = 4096;
     } else if (*n == 0) {
-        char *tmp = realloc(*lineptr, 4096);
+        unsigned char *tmp = realloc(*lineptr, 4096);
         if (tmp) {
             *lineptr = tmp;
             *n = 4096;
@@ -668,11 +668,11 @@ static int vobsub_add_timestamp(vobsub_t *vob, uint64_t filepos, int ms)
     return -1;
 }
 
-static int vobsub_parse_id(vobsub_t *vob, const char *line)
+static int vobsub_parse_id(vobsub_t *vob, const unsigned char *line)
 {
     // id: xx, index: n
     size_t idlen;
-    const char *p, *q;
+    const unsigned char *p, *q;
     p  = line;
     while (isspace(*p))
         ++p;
@@ -695,7 +695,7 @@ static int vobsub_parse_id(vobsub_t *vob, const char *line)
     return vobsub_add_id(vob, p, idlen, atoi(q));
 }
 
-static int vobsub_parse_timestamp(vobsub_t *vob, const char *line)
+static int vobsub_parse_timestamp(vobsub_t *vob, const unsigned char *line)
 {
     int h, m, s, ms;
     uint64_t filepos;
@@ -705,7 +705,7 @@ static int vobsub_parse_timestamp(vobsub_t *vob, const char *line)
     return vobsub_add_timestamp(vob, filepos, vob->delay + ms + 1000 * (s + 60 * (m + 60 * h)));
 }
 
-static int vobsub_parse_origin(vobsub_t *vob, const char *line)
+static int vobsub_parse_origin(vobsub_t *vob, const unsigned char *line)
 {
     // org: X,Y
     unsigned x, y;
@@ -745,7 +745,7 @@ unsigned int vobsub_rgb_to_yuv(unsigned int rgb)
     return y << 16 | u << 8 | v;
 }
 
-static int vobsub_parse_delay(vobsub_t *vob, const char *line)
+static int vobsub_parse_delay(vobsub_t *vob, const unsigned char *line)
 {
     int h, m, s, ms;
     int forward = 1;
@@ -769,7 +769,7 @@ static int vobsub_parse_delay(vobsub_t *vob, const char *line)
     return 0;
 }
 
-static int vobsub_set_lang(const char *line)
+static int vobsub_set_lang(const unsigned char *line)
 {
     if (vobsub_id == -1)
         vobsub_id = atoi(line + 8);
@@ -783,7 +783,7 @@ static int vobsub_parse_one_line(vobsub_t *vob, rar_stream_t *fd,
     ssize_t line_size;
     int res = -1;
         size_t line_reserve = 0;
-        char *line = NULL;
+        unsigned char *line = NULL;
     do {
         line_size = vobsub_getline(&line, &line_reserve, fd);
         if (line_size < 0 || line_size > 1000000 ||
-- 
2.5.0

